const request = require('supertest');
const app = require('../app');
const mongoose = require('mongoose');

let server;

beforeAll(async () => {
  // ‡πÉ‡∏ä‡πâ‡∏û‡∏≠‡∏£‡πå‡∏ï 0 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Node.js ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
  server = app.listen(0);
});

afterAll(async () => {

  // ‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MongoDB ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à
  await mongoose.connection.close();
  await server.close();
});

// describe('API Testing', () => {
//   it('GET /api/user - success', async () => {
//     const res = await request(server).get('/api/user'); // ‡πÉ‡∏ä‡πâ server ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≤‡∏Å beforeAll
//     expect(res.statusCode).toEqual(200); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö response status code
//     // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö response body ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
//   });
// });


describe('User API Testing', () => {

    it('POST /api/user/create - success', async () => {

      const userData = {
        firstName: "Anecha",
        lastName: "Boonthongdee",
        email: "anecha.boon@gmail.com",
        password: "1234"
      };
  
      const res = await request(server)
        .post('/api/user')
        .send(userData);  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡πà‡∏≤‡∏ô .send()

        console.log(`üöÄ log:res-create-user`,res )
  
      expect(res.statusCode).toEqual(201);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      expect(res.body).toHaveProperty('message', 'User created successfully');
    });
  
    // it('POST /api/user/create - missing fields', async () => {
    //   const userData = {
    //     firstName: "Anecha",
    //     lastName: "Boonthongdee",
    //     password: "1234"
    //   };
  
    //   const res = await request(server)
    //     .post('/api/user')
    //     .send(userData);  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö
  
    //   expect(res.statusCode).toEqual(400);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ error ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö
    // //   expect(res.body).toHaveProperty('message', 'All fields are required');
    // });
});
